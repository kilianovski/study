// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0, 0, 0, 0, 0, 0, 0] if sel == 000
 *                            [0, in, 0, 0, 0, 0, 0, 0] if sel == 001
 *                            ...
 *                            [0, 0, 0, 0, 0, 0, 0, in] if sel == 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // First, split the input into two paths with the most significant selection bit.
    DMux(in=in, sel=sel[2], a=half1, b=half2);

    // Now, use DMux4Way to split each half into four paths using the two least significant bits.
    DMux4Way(in=half1, sel=sel[0..1], a=a, b=b, c=c, d=d);
    DMux4Way(in=half2, sel=sel[0..1], a=e, b=f, c=g, d=h);
}
